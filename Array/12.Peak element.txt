Peak element

Input: 
N = 3
arr[] = {1,2,3}
Possible Answer: 2
Generated Output: 1
Explanation: index 2 is 3.
It is the peak element as it is 
greater than its neighbour 2.
If 2 is returned then the generated output will be 1 else 0.


class Solution {

    public int peakElement(int[] arr, int n) {
        if (n == 1) {
            return 0; // Special case for an array with only one element
        }

        for (int i = 0; i < n; i++) {
            if (i == 0 && arr[i] >= arr[i + 1]) {
                return i;
            } else if (i == n - 1 && arr[i] >= arr[i - 1]) {
                return i;
            } else if (i > 0 && i < n - 1 && arr[i] >= arr[i + 1] && arr[i] >= arr[i - 1]) {
                return i;
            }
        }

        return -1;
    }
}
